
<script>
var margin = {top: 20, right: 180, bottom: 50, left: 50},
    width = 1000- margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

//var parseDate = d3.time.format("%d-%b-%y").parse;

var x = d3.scale.linear()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);
var color = d3.scale.category10();
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickFormat(d3.format("d"));

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
.interpolate("basis")
    .x(function(d) { return x(d.x); })
    .y(function(d) { return y(d.y); });
 

var svg = d3.select("#graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("<%=@graph.dataset.data_file.url%>", function(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "x"; }));


  yMax = d3.max(data, function(d) { return d.y2; });
  yMin = d3.min(data, function(d) { return d.y1; });

var lines = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {x: d.x, y: +d[name]};
      })
    };
  });
  x.domain(d3.extent(data, function(d) { return d.x; }));
  //y.domain([yMin - (0.2 * yMin), yMax + (0.1 * yMax)]);
  y.domain([
    d3.min(lines, function(c) { return d3.min(c.values, function(v) { return v.y; }); }),
    d3.max(lines, function(c) { return d3.max(c.values, function(v) { return v.y; }); })
  ]);

 <%= render partial: "axes" %>

  var dataline = svg.selectAll(".line")
      .data(lines)
    .enter().append("g")
      .attr("class", "line");

dataline.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

dataline.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.x) + "," + y(d.value.y) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
